/*
 * OthersView.java
 *
 * Created on August 23, 2006, 12:40 AM
 */

package com.pinpos.ui.views.order;

import java.util.ArrayList;
import java.util.List;

import javax.swing.JDialog;

import com.pinpos.POSConstants;
import com.pinpos.main.Application;
import com.pinpos.model.Ticket;
import com.pinpos.model.TicketItem;
import com.pinpos.model.dao.TicketDAO;
import com.pinpos.swing.TransparentPanel;
import com.pinpos.ui.dialog.MiscTicketItemDialog;
import com.pinpos.ui.dialog.NumberSelectionDialog2;
import com.pinpos.ui.dialog.POSMessageDialog;
import com.pinpos.ui.views.OrderInfoDialog;
import com.pinpos.ui.views.OrderInfoView;

/**
 *
 * @author  MShahriar
 */
public class OthersView extends TransparentPanel {
	private Ticket currentTicket;

	/** Creates new form OthersView */
	public OthersView() {
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
	private void initComponents() {

		transparentPanel2 = new com.pinpos.swing.TransparentPanel();
		btnOrderInfo = new com.pinpos.swing.PosButton();
		btnMisc = new com.pinpos.swing.PosButton();
		transparentPanel1 = new com.pinpos.swing.TransparentPanel();
		btnCustomerNumber = new com.pinpos.swing.PosButton();
		btnTableNumber = new com.pinpos.swing.PosButton();

		setBorder(javax.swing.BorderFactory.createTitledBorder(null, com.pinpos.POSConstants.OTHERS, javax.swing.border.TitledBorder.CENTER,
				javax.swing.border.TitledBorder.DEFAULT_POSITION));
		setLayout(new java.awt.GridLayout(0, 1, 5, 5));

		transparentPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
		transparentPanel2.setLayout(new java.awt.GridLayout(1, 0, 5, 5));

		btnOrderInfo.setText(com.pinpos.POSConstants.ORDER_INFO);
		btnOrderInfo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				doViewOrderInfo();
			}
		});
		transparentPanel2.add(btnOrderInfo);

		btnMisc.setText(com.pinpos.POSConstants.MISC);
		btnMisc.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				doInsertMisc(evt);
			}
		});
		transparentPanel2.add(btnMisc);

		add(transparentPanel2);

		transparentPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
		transparentPanel1.setLayout(new java.awt.GridLayout(1, 0, 5, 5));

		btnCustomerNumber.setText(com.pinpos.POSConstants.CUSTOMER);
		btnCustomerNumber.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnCustomerNumberActionPerformed(evt);
			}
		});
		transparentPanel1.add(btnCustomerNumber);

		btnTableNumber.setText(com.pinpos.POSConstants.TABLE);
		btnTableNumber.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnTableNumberActionPerformed(evt);
			}
		});
		transparentPanel1.add(btnTableNumber);

		add(transparentPanel1);
	}// </editor-fold>//GEN-END:initComponents

	private void doInsertMisc(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doInsertMisc
		MiscTicketItemDialog dialog = new MiscTicketItemDialog(Application.getPosWindow(), true);
		dialog.open();
		if (!dialog.isCanceled()) {
			TicketItem ticketItem = dialog.getTicketItem();
			RootView.getInstance().getOrderView().getTicketView().addTicketItem(ticketItem);
		}
	}//GEN-LAST:event_doInsertMisc

	private void doViewOrderInfo() {//GEN-FIRST:event_btnOrderInfoActionPerformed
		try {
			Ticket ticket = getCurrentTicket();
			
			List<Ticket> tickets = new ArrayList<Ticket>();
			tickets.add(ticket);
			
			OrderInfoView view = new OrderInfoView(tickets);
			OrderInfoDialog dialog = new OrderInfoDialog(view);
			dialog.setSize(400, 600);
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setLocationRelativeTo(Application.getPosWindow());
			dialog.setVisible(true);

		} catch (Exception e) {
			// TODO: handle exception
		}
		//    	TicketDetailDialog dialog = new TicketDetailDialog(Application.getPosWindow(), true);
		//    	dialog.setTicket(getCurrentTicket());
		//    	dialog.open();
		//    	
		//    	if(!dialog.isCanceled()) {
		//    		OrderView.getInstance().getTicketView().updateView();
		//    	}

	}//GEN-LAST:event_btnOrderInfoActionPerformed

	private void btnCustomerNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerNumberActionPerformed
		updateGuestNumber();
	}//GEN-LAST:event_btnCustomerNumberActionPerformed

	private void updateGuestNumber() {
		Ticket thisTicket = getCurrentTicket();
		int guestNumber = thisTicket.getNumberOfGuests();

		NumberSelectionDialog2 dialog = new NumberSelectionDialog2();
		dialog.setTitle(com.pinpos.POSConstants.NUMBER_OF_GUESTS);
		dialog.setValue(guestNumber);
		dialog.pack();
		dialog.open();

		if (dialog.isCanceled()) {
			return;
		}

		guestNumber = (int) dialog.getValue();
		if (guestNumber == 0) {
			POSMessageDialog.showError(Application.getPosWindow(), com.pinpos.POSConstants.GUEST_NUMBER_CANNOT_BE_0);
			return;
		}

		thisTicket.setNumberOfGuests(guestNumber);
		updateView();

	}

	private void btnTableNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTableNumberActionPerformed
		updateTableNumber();
	}//GEN-LAST:event_btnTableNumberActionPerformed

	private void updateTableNumber() {
		Ticket thisTicket = getCurrentTicket();
		int tableNumber = thisTicket.getTableNumber();

		NumberSelectionDialog2 dialog = new NumberSelectionDialog2();
		dialog.setTitle(com.pinpos.POSConstants.TABLE_NUMBER);
		dialog.setValue(tableNumber);
		dialog.pack();
		dialog.open();

		if (dialog.isCanceled()) {
			return;
		}

		tableNumber = (int) dialog.getValue();
		if (tableNumber == 0) {
			POSMessageDialog.showError(Application.getPosWindow(), com.pinpos.POSConstants.TABLE_NUMBER_CANNOT_BE_0);
			return;
		}

		TicketDAO dao = TicketDAO.getInstance();
		Ticket otherTicket = dao.findTicketByTableNumber(tableNumber);

		if (otherTicket != null && !otherTicket.equals(thisTicket)) {
			POSMessageDialog.showError(com.pinpos.POSConstants.TABLE_OCCUPIED);
			return;
		}

		thisTicket.setTableNumber(tableNumber);
		updateView();
	}

	private com.pinpos.swing.PosButton btnCustomerNumber;
	private com.pinpos.swing.PosButton btnMisc;
	private com.pinpos.swing.PosButton btnOrderInfo;
	private com.pinpos.swing.PosButton btnTableNumber;
	private com.pinpos.swing.TransparentPanel transparentPanel1;
	private com.pinpos.swing.TransparentPanel transparentPanel2;

	// End of variables declaration//GEN-END:variables

	public void updateView() {
		if (currentTicket != null) {
			if (!Ticket.DINE_IN.equals(currentTicket.getTicketType())) {
				btnCustomerNumber.setText("");
				btnTableNumber.setText("");

				btnCustomerNumber.setEnabled(false);
				btnTableNumber.setEnabled(false);
			} else {
//				btnCustomerNumber.setEnabled(true);
				btnCustomerNumber.setEnabled(false);
				btnTableNumber.setEnabled(true);

				btnCustomerNumber.setText(currentTicket.getNumberOfGuests() + " " + POSConstants.GUEST);
				btnTableNumber.setText(POSConstants.RECEIPT_REPORT_TABLE_NO_LABEL + currentTicket.getTableNumber());
			}
		}
	}

	public Ticket getCurrentTicket() {
		return currentTicket;
	}

	public void setCurrentTicket(Ticket currentTicket) {
		this.currentTicket = currentTicket;
		updateView();
	}
}
